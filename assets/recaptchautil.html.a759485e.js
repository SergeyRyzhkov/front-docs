import{_ as o,r as e,o as c,c as l,a as n,b as t,w as p,d as s,e as i}from"./app.40083dda.js";const u={},r=n("h1",{id:"google-recaptcha-v3-utils",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#google-recaptcha-v3-utils","aria-hidden":"true"},"#"),s(" Google ReCaptcha v3 utils")],-1),k=n("p",null,[n("code",null,"src\\utils\\ReCaptcha.ts")],-1),d=n("strong",null,"\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442\u0441\u044F \u043C\u043E\u0434\u0443\u043B\u044C",-1),v=s(),m=n("strong",null,"\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430 \u0432\u043D\u0435\u0448\u043D\u0438\u0445 \u0441\u043A\u0440\u0438\u043F\u0442\u043E\u0432",-1),h=n("strong",null,"\u041F\u0440\u0438\u043C\u0435\u0440 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u044F",-1),b=s(),_=n("strong",null,"Google ReCaptcha v3",-1),w=i(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> loadScript <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./ExternalScript&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">declare</span> <span class="token keyword">const</span> window<span class="token operator">:</span> Window <span class="token operator">&amp;</span>
  <span class="token keyword">typeof</span> globalThis <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
    grecaptcha<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> scriptLoaded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">loadReCaptchaScript</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>siteKey<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>scriptLoaded<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> <span class="token function">loadScript</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://www.google.com/recaptcha/api.js?render=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>siteKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      scriptLoaded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
      scriptLoaded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> executeAction <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>siteKey<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> actionName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">loadReCaptchaScript</span><span class="token punctuation">(</span>siteKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> _reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>scriptLoaded <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token operator">!</span>window<span class="token punctuation">.</span>grecaptcha<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        window<span class="token punctuation">.</span>grecaptcha<span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> token <span class="token operator">=</span> <span class="token keyword">await</span> window<span class="token punctuation">.</span>grecaptcha<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>siteKey<span class="token punctuation">,</span> <span class="token punctuation">{</span> action<span class="token operator">:</span> actionName <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),y=n("strong",null,"\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442\u0441\u044F \u043C\u043E\u0434\u0443\u043B\u044C",-1),g=s(),f=n("strong",null,"\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430 \u0432\u043D\u0435\u0448\u043D\u0438\u0445 \u0441\u043A\u0440\u0438\u043F\u0442\u043E\u0432",-1),x=n("strong",null,"\u041F\u0440\u0438\u043C\u0435\u0440 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u044F",-1),C=s(),R=n("strong",null,"Google ReCaptcha v3",-1);function L(N,S){const a=e("RouterLink");return c(),l("div",null,[r,k,n("p",null,[d,v,t(a,{to:"/nuxt2/other/externalscripts.html"},{default:p(()=>[m]),_:1})]),n("p",null,[h,b,t(a,{to:"/nuxt2/cases/recaptcha.html"},{default:p(()=>[_]),_:1})]),w,n("p",null,[y,g,t(a,{to:"/nuxt2/other/externalscripts.html"},{default:p(()=>[f]),_:1})]),n("p",null,[x,C,t(a,{to:"/nuxt2/cases/recaptcha.html"},{default:p(()=>[R]),_:1})])])}var V=o(u,[["render",L],["__file","recaptchautil.html.vue"]]);export{V as default};
